---
title: How do I access Cloud Data from my Local Machine?
execute:
    eval: false
---

## Downloading data

When you have found the data you want to use, you have two options.  You can download the data to work locally, or access the data directly to work in the cloud. This second way of working is called "_Direct Cloud Access_" or simply, "_Direct Access_". 

This page covers two situations of downloading data from Earthdata Cloud to your local machine:

* Downloading data using the `earthaccess` library
* Downloading data from an OPeNDAP server

## earthaccess

::: {.panel-tabset group="language"}

## Python

We can use the [`earthaccess`](https://nsidc.github.io/earthaccess/) python library to grab the file URLs and then access them with the `xarray` library. 


```{python}
#Import packages
import earthaccess
import xarray as xr

#Authentication with Earthdata Login
auth = earthaccess.login(strategy="netrc")

#Access land ice height from ATLAS/ICESat-2 V005 (10.5067/ATLAS/ATL06.005), searching for data over western Greenland coast over two weeks in July 2022. The data are provided as HDF5 granules (files) that span about 1/14th of an orbit.

results = earthaccess.search_data(short_name="ATL06",
                                  version="005",
                                  cloud_hosted=True,
                                  temporal = ("2022-07-17","2022-07-31"),
                                  bounding_box = (-51.96423,68.10554,-48.71969,70.70529))

files = earthaccess.download(results, "./local_folder")

#Use xarray to load the data as a multifile dataset for a single group in the HDF5 file, in this case land ice segments:
ds = xr.open_mfdataset(files, group='/gt1l/land_ice_segments')
ds
```


## R

R code coming soon!

```{bash}
# Coming soon!
```

## Matlab

Matlab code coming soon!

```{bash}
#| echo: true
# Coming soon!
```

## Command Line

With `wget` and `curl`:

```{bash}
# Coming soon!
```


:::





## OPeNDAP

OPeNDAP, or the [Open-source Project for a Network Data Access Protocol](https://www.earthdata.nasa.gov/engage/open-data-services-and-software/api/opendap), is a data server that allows for accessing scientific datasets through the public internet. OPeNDAP links can be acquired through dataset landing pages or the [common metadata repository](https://cmr.earthdata.nasa.gov/search/site/collections/directory/eosdis). Once you have the desired link(s), you can open them as follows:

```{python}
#Import packages
import xarray as xr

ds_https = xr.open_dataset(https://opendap.earthdata.nasa.gov/collections/C2532426483-ORNL_CLOUD/granules/Daymet_Daily_V4R1.daymet_v4_daily_hi_tmax_2010.nc)

# For datasets that contain dap4 specific datatypes, such as `int64`, replace `https` with `dap4` at the beginning to open with xarray. For example:
url = https://opendap.earthdata.nasa.gov/collections/C2036881966-POCLOUD/granules/AQUA_MODIS.20220109_20220116.L3m.8D.SST4.sst4.4km
dap4_url = url.replace("https://", "dap4://")
# dap4_url output: dap4://opendap.earthdata.nasa.gov/collections/C2036881966-POCLOUD/granules/AQUA_MODIS.20220109_20220116.L3m.8D.SST4.sst4.4km
ds_dap4 = xr.open_dataset(dap4_url)

# Note: Some datasets have their variables organized in groups, so within the open_dataset function, you may need to specify 'group=' to access the dataset.

```

For more information, see the [OPeNDAP Data Access Client Tutorials](https://opendap.github.io/documentation/tutorials/DataAccessTutorials.html).