---
title: Read Data
execute:
    eval: false
---


## netCDF


::: {.panel-tabset group="language"}

## Python

We recommend using `xarray`'s [open_dataset](https://docs.xarray.dev/en/stable/generated/xarray.open_dataset.html)

### For a single file
```python
import xarray as xr
ds = xr.open_dataset(filename)
```

### For multiple files
```python
import xarray as xr
ds = xr.open_mfdataset(list_of_filenames)
```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```



:::


## HDF5

::: {.panel-tabset group="language"}

## Python

For HDF5 files, there are two methods we can use: `xarray`'s [open_dataset](https://docs.xarray.dev/en/stable/generated/xarray.open_dataset.html) and [`h5py`](https://docs.h5py.org/en/stable/quick.html)

```python
import xarray as xr
ds = xr.open_dataset(filename,
                     group=path_to_H5netCDF_group)
```
```python
# add in directions for h5py

```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```


:::



## GeoTIFF

::: {.panel-tabset group="language"}

## Python
For GeoTIFF files, we recommend using `rioxarray`'s [`open_rasterio`](https://corteva.github.io/rioxarray/html/rioxarray.html#rioxarray.open_rasterio)

```python
import rioxarray
xds = rioxarray.open_rasterio("my.tif")
```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```


:::



## Shapefiles & GeoJSON


::: {.panel-tabset group="language"}

## Python
To open shapefiles or GeoJSON, we recommend using `geopandas`'s [`read_file`](https://geopandas.org/en/stable/docs/reference/api/geopandas.read_file.html#geopandas.read_file).

```python
import geopandas as gpd
gdf = gpd.read_file(filename)
```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```



:::


## CSV

::: {.panel-tabset group="language"}

## Python
To open CSV files, we recommend using `pandas`'s [`read_csv`](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html).

```python
import pandas as pd
df = pd.read_csv(filename)
```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```



:::


## Excel


::: {.panel-tabset group="language"}

## Python

To open Excel files, we recommend using `pandas`'s [`read_excel`](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html)
```python
import pandas as pd
df = pd.read_excel(filename)
```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```



:::

## .mat Files


::: {.panel-tabset group="language"}

## Python


```python
#coming soon! scipy & .mat
```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```



:::


## Binary Files

::: {.panel-tabset group="language"}

## Python
To open binary files, we recommend using `numpy`'s [`from_file`](https://numpy.org/doc/stable/reference/generated/numpy.fromfile.html). You will need to know the dimensions and data type of the binary file and if there is an offset or header information in the binary file.

```python
import numpy as np
arr = np.from_file(filepath, dtype=data_type).reshape(nrows, ncols)
```


## R

R code coming soon!

```r
# Coming soon!
```

## Matlab

Matlab code coming soon!

```bash
#| echo: true
# Coming soon!
```



:::
