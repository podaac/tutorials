{
  "hash": "92e42afeb89a1782ef1e15830da0d4e9",
  "result": {
    "markdown": "---\ntitle: Read Data\nexecute:\n    eval: false\n---\n\n\n\n## netCDF\n\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\n\nWe recommend using `xarray`'s [open_dataset](https://docs.xarray.dev/en/stable/generated/xarray.open_dataset.html)\n\n### For a single file\n\n::: {.cell}\n\n```{.python .cell-code}\nimport xarray as xr\nds = xr.open_dataset(filename)\n```\n:::\n\n\n### For multiple files\n\n::: {.cell}\n\n```{.python .cell-code}\nimport xarray as xr\nds = xr.open_mfdataset(list_of_filenames)\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n\n:::\n\n\n## HDF5\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\n\nFor HDF5 files, there are two methods we can use: `xarray`'s [open_dataset](https://docs.xarray.dev/en/stable/generated/xarray.open_dataset.html) and [`h5py`](https://docs.h5py.org/en/stable/quick.html)\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport xarray as xr\nds = xr.open_dataset(filename,\n                     group=path_to_H5netCDF_group)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# add in directions for h5py\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n:::\n\n\n\n## GeoTIFF\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\nFor GeoTIFF files, we recommend using `rioxarray`'s [`open_rasterio`](https://corteva.github.io/rioxarray/html/rioxarray.html#rioxarray.open_rasterio)\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport rioxarray\nxds = rioxarray.open_rasterio(\"my.tif\")\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n:::\n\n\n\n## Shapefiles & GeoJSON\n\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\nTo open shapefiles or GeoJSON, we recommend using `geopandas`'s [`read_file`](https://geopandas.org/en/stable/docs/reference/api/geopandas.read_file.html#geopandas.read_file).\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport geopandas as gpd\ngdf = gpd.read_file(filename)\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n\n:::\n\n\n## CSV\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\nTo open CSV files, we recommend using `pandas`'s [`read_csv`](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html).\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\ndf = pd.read_csv(filename)\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n\n:::\n\n\n## Excel\n\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\n\nTo open Excel files, we recommend using `pandas`'s [`read_excel`](https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html)\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\ndf = pd.read_excel(filename)\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n\n:::\n\n## .mat Files\n\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n#coming soon! scipy & .mat\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n\n:::\n\n\n## Binary Files\n\n::: {.panel-tabset group=\"language\"}\n\n## Python\nTo open binary files, we recommend using `numpy`'s [`from_file`](https://numpy.org/doc/stable/reference/generated/numpy.fromfile.html). You will need to know the dimensions and data type of the binary file and if there is an offset or header information in the binary file.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\narr = np.from_file(filepath, dtype=data_type).reshape(nrows, ncols)\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}