---
title: Advanced Cloud
subtitle: When you want to dive into optimizing cloud workflows
---

### **AWS Lambda** 
- [User Guide to Scale Scientific Analysis in the Cloud](../notebooks/aws_lambda_sst/docs/documentation.md) - user guide for deploying AWS services in end-user Amazon accounts
- [Notebook Demonstration](../notebooks/aws_lambda_sst/podaac-lambda-invoke-sst-global-mean.ipynb) - This tutorial demonstrates how to plot a timeseries of global mean sea surface temperature values using AWS Lambda to perform the global mean computation using the MUR 25km dataset.

### **Zarr** 
- [Tutorial for NetCDF4 Files](../external/zarr_access.ipynb) - Teaches about the Zarr cloud optimized format

### **Dask and Coiled**
- [Introduction to Dask Tutorial](../notebooks/Advanced_cloud/basic_dask.ipynb) - covers the basics of using Dask for parallel computing with NASA Earth Data completely in the cloud
- [Dask Function Replication Example](../notebooks/Advanced_cloud/dask_delayed_01.ipynb) - demonstrates a more complex example of replicating a function over many files in parallel using `dask.delayed()`. The example analysis generates spatial correlation maps of sea surface temperature vs sea surface height, using data sets available on PO.DAAC.
- [Coiled Function Replication Example](../notebooks/Advanced_cloud/coiled_function_01.ipynb) - demonstrates a more complex example of replicating a function over many files in parallel using `coiled.function()`. The example analysis generates spatial correlation maps of sea surface temperature vs sea surface height, using data sets available on PO.DAAC. This replicates the analysis from the [Dask Function Replication Example](../notebooks/Advanced_cloud/dask_delayed_01.ipynb), but changes the method of parallel computation. Instead of using a local cluster on a single VM (Dask), many VM's are combined into a distributed cluster (Coiled).

### Using **Kerchunk, Zarr & Dask** in the Cloud
- [Kerchunk JSON Generation](../external/SWOT_to_kerchunk.ipynb) - Generates a Kerchunk JSON file for a single PO.DAAC Collection, creates output for input in following tutorial.
- [Integrating Dask, Kerchunk, Zarr and Xarray](../external/SWOT_SSH_dashboard.ipynb) - Efficiently visualize a whole collection of data in an interactive dashboard via cloud-optimized formats.

### **Harmony-py** 
- [Subsetting tutorial](https://harmony-py.readthedocs.io/en/main/user/tutorial.html) - a tutorial for a Python library that integrates with NASA's [Harmony Services](https://harmony.earthdata.nasa.gov/).
